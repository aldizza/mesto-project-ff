{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["const config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\n    headers: {\n      authorization: 'b6ab756a-d068-4063-b5bd-15deff8a109f',\n      'Content-Type': 'application/json'\n    }\n  }\n\n//проверка ответа от сервера после выполнения запроса\nfunction checkRes(res) {\n  if (res.ok) {\n    return res.json();\n  }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n//Загрузка информации о пользователе с сервера\nfunction getUserInfo() {\n    return fetch(`${config.baseUrl}/users/me`, {\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\n// Загрузка карточек с сервера\nfunction getInitialCards() {\n    return fetch(`${config.baseUrl}/cards`, {\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\n//Редактирование профиля\nfunction editProfileInfo(name, about) {\n    return fetch(`${config.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: config.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => checkRes(res));\n}\n\n// Добавление новой карточки \nfunction addNewCard(name, link) {\n    return fetch(`${config.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: config.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => checkRes(res));\n}\n\n function deleteCard(cardId) {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\nfunction addLike(cardId) {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: config.headers,\n    })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      return res.json(); \n    })\n    .then((updatedCard) => {\n      return updatedCard.likes.length;\n    });\n  }\n\n  function removeLike(cardId) {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: config.headers,\n    })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      return res.json();\n    })\n    .then((updatedCard) => {\n      return updatedCard.likes.length;\n    });\n  }\n\n//Обновление аватара пользователя\nfunction updateUserAvatar(avatar) {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: config.headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then((res) => checkRes(res));\n}\n  \nexport {getUserInfo, getInitialCards, editProfileInfo, addNewCard, deleteCard, addLike, removeLike, updateUserAvatar};","import { deleteCard, addLike, removeLike } from \"./api.js\";\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\nfunction createCard(dataCard, myId, clickImageHandler) {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\n\n  cardImage.src = dataCard.link;\n  cardTitle.textContent = dataCard.name;\n\n  const ownerId = dataCard.owner._id;\n  const cardId = dataCard._id;\n\n  if (myId === ownerId) {\n    cardDeleteButton.addEventListener('click', () => {\n        deleteCard(cardId);\n        cardElement.remove();\n    });\n} else {\n    cardDeleteButton.remove();\n}\n \n  //лайки карточек\n  const cardLikebutton = cardElement.querySelector('.card__like-button');\n  const hasMyLike = dataCard.likes && Array.isArray(dataCard.likes) && dataCard.likes.some(element => element._id === myId);\n  if (hasMyLike)\n    cardLikebutton.classList.add('card__like-button_is-active');\n\n  cardLikebutton.addEventListener('click', function() {\n    if (cardLikebutton.classList.contains('card__like-button_is-active')) {\n      removeLike(cardId)\n        .then((counterLike) => {\n          updateUI(counterLike); \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      addLike(cardId)\n        .then((counterLike) => {\n          updateUI(counterLike, myId); \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  });\n  \n  const counterElement = cardElement.querySelector('.counter__likes');\n\n  // Функция для обновления интерфейса на основе обновленной карточки\n  function updateUI(counterLike, myId) {\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\n\n    counterElement.textContent = counterLike;\n\n    if (myId && counterLike > 0) {\n        cardLikeButton.classList.add('card__like-button_is-active');\n    } else {\n        cardLikeButton.classList.remove('card__like-button_is-active');\n    }\n  \n}\n  \n  //кол-во лайков с сервера\n  counterElement.textContent = dataCard.likes && Array.isArray(dataCard.likes) ? dataCard.likes.length : 0;\n\n  cardImage.addEventListener('click', function () {\n    clickImageHandler(dataCard);\n  });\n\n  return cardElement;\n};\n\n\nexport {createCard};\n","export {openModal, closeModal};\n\nfunction openModal(target) {\n    target.classList.add('popup_is-opened');\n    addEscapeListener();\n    document.addEventListener('click', closePopupByCrossButton);\n    document.addEventListener('click', overlayClick); \n}\n\nfunction closeModal(target) {\n    target.classList.remove('popup_is-opened');\n    removeEscapeListener();\n    document.removeEventListener('click', closePopupByCrossButton); // Удаляем обработчик клика на document\n    document.removeEventListener('click', overlayClick);\n}\n\nfunction addEscapeListener() {\n    document.addEventListener('keydown', handleEscape);\n}\n\nfunction removeEscapeListener() {\n    document.removeEventListener('keydown', handleEscape);\n}\n\nfunction handleEscape(event) {\n    if (event.key === 'Escape') {\n        const popup = document.querySelector('.popup_is-opened');\n        closeModal(popup);\n    }\n}\n\nfunction overlayClick(evt) {\n    const target = evt.target;\n    if (target.classList.contains('popup_is-opened')) {\n        closeModal(target);\n    }\n}\n\nfunction closePopupByCrossButton(evt) {\n    const target = evt.target;\n    if (target.classList.contains('popup__close')) {\n        closeModal(target.closest('.popup'));\n    }\n}","const validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n};\n\n//показывает элемент ошибки\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(validationConfig.errorClass);\n  };\n\n//скрывает элемент ошибки\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = '';\n  };\n\n //Проверяет formInput на корректность введённых данных и вызывает hideError и showError. \nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\n    if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n}; \n\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    }\n};\n\n  //Функция hasInvalidInput только проверяет наличие невалидного поля и сигнализирует, можно ли разблокировать кнопку сабмита.\nconst hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    })\n};\n\nconst setEventListeners = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', function () {\n        checkInputValidity(formElement, inputElement, validationConfig);\n        toggleButtonState(inputList, buttonElement, validationConfig);\n      });\n    });\n};\n\n//функция, которая найдёт и переберёт все формы на странице (включаем валидацию) \nconst enableValidation = (validationConfig) => {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach(formElement => {\n        setEventListeners(formElement, validationConfig);\n    })\n};\n\nfunction clearValidation(formElement, validationConfig) {\n    const inputs = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n    inputs.forEach(input => {\n        hideInputError(formElement, input, validationConfig);\n        input.setCustomValidity('');\n    });\n    toggleButtonState(inputs, buttonElement, validationConfig);\n}\n\nexport { clearValidation, enableValidation, validationConfig };\n\n\n","import {createCard} from './card.js';\nimport {openModal, closeModal} from './modal.js';\nimport { clearValidation, enableValidation, validationConfig } from './validation.js';\nimport { getUserInfo, getInitialCards, editProfileInfo, addNewCard, updateUserAvatar } from './api.js';\n\n//Попапы\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\nconst profileAddbutton = document.querySelector('.profile__add-button');\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\n\nprofileEditButton.addEventListener('click', () => {\n    fillInEditProfileFormInputs();\n    clearValidation(formEditProfile, validationConfig);\n    openModal(popupTypeEdit);\n});\n\nprofileAddbutton.addEventListener('click', () => {\n    formAddCard.reset();\n    clearValidation(formAddCard, validationConfig);\n    openModal(popupTypeNewCard);\n});\n\nconst profileImageType = document.querySelector('.profile__image');\nconst popupAvatar = document.querySelector('.popup__content-profile-edit');\n\nprofileImageType.addEventListener('click', () => {\n    formAddprofileAvatar.reset();\n    clearValidation(formAddprofileAvatar, validationConfig);\n    openModal(popupAvatar);\n});\n\n//  Редактирование профиля\nconst nameInput = document.querySelector('.popup__input_type_name'); \nconst jobInput = document.querySelector('.popup__input_type_description');\nconst formEditProfile = document.forms['edit-profile'];\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\nfunction fillInEditProfileFormInputs() {\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n}\n\nfunction submitEditProfileForm(evt) {\n    evt.preventDefault(); \n    const jobValue = jobInput.value;\n    const nameValue = nameInput.value;\n\n    const submitButton = evt.target.querySelector('button[type=\"submit\"]');\n    submitButton.textContent = 'Сохранение...';\n\n    editProfileInfo(nameValue, jobValue)\n        .then(() => {\n            profileTitle.textContent = nameValue;\n            profileDescription.textContent = jobValue;\n            closeModal(popupTypeEdit);\n        })\n        .catch(error => {\n            console.error('Ошибка при обновлении данных профиля:', error);\n        })\n        .finally(() => {\n            submitButton.textContent = 'Сохранить';\n        });\n}\n\nformEditProfile.addEventListener('submit', submitEditProfileForm);\n\n // Добавление карточки\nconst formAddCard = document.forms['new-place']; // получаем форму\nconst cardNameInput = formAddCard.querySelector('.popup__input_type_card-name');\nconst urlInput = formAddCard.querySelector('.popup__input_type_url');\nconst placesList = document.querySelector('.places__list');\n\nfunction submitFormCard(evt) {\n    evt.preventDefault();\n\n    const submitButton = evt.target.querySelector('button[type=\"submit\"]');\n    submitButton.textContent = 'Сохранение...';\n\n    const placeName = cardNameInput.value;\n    const imageUrl = urlInput.value;\n    \n    if (imageUrl) {\n        \n        addNewCard(placeName, imageUrl)\n            .then((res) => {\n                const dataCard = {\n                    name: placeName,\n                    link: imageUrl,\n                    owner: {\"_id\": res.owner._id},\n                    _id: res._id\n                };\n                const newCard = createCard(dataCard, res.owner._id);\n                placesList.prepend(newCard);\n                evt.target.reset(); \n                closeModal(popupTypeNewCard);\n            })\n            .catch(error => {\n                console.error('Ошибка при добавлении новой карточки:', error);\n            })\n            .finally(() => {\n                submitButton.textContent = 'Сохранить';\n            });\n    }\n}\n\nformAddCard.addEventListener('submit', submitFormCard);\n\n// Открытие попапа с картинкой\nconst popupImg = document.querySelector('.popup_type_image');\nconst modalImage = popupImg.querySelector('.popup__image');\nconst caption = popupImg.querySelector('.popup__caption');\n\nexport function clickImageHandler(dataCard) { \n    const imageUrl = dataCard.link; \n    const imageAlt = dataCard.name; \n    openModalImg(imageUrl, imageAlt); \n}\n\nfunction openModalImg(imageUrl, imageAlt) { \n    modalImage.src = imageUrl; \n    modalImage.alt = imageAlt; \n    caption.textContent = imageAlt;  \n    openModal(popupImg);\n}\n\n//Обновление аватара\nconst formAddprofileAvatar = document.forms['new-avatar'];\nconst urlInputAvatar = formAddprofileAvatar.querySelector('.popup__input_type_url_avatar');\nconst profileImage = document.querySelector('.profile__image');\n\n\nfunction submitFormAvatar(evt) {\n    evt.preventDefault();\n\n    const imageUrl = urlInputAvatar.value;\n    if (imageUrl) {\n\n        evt.target.querySelector('button[type=\"submit\"]').textContent = 'Сохранение...';\n\n        profileImage.style.backgroundImage = `url('${imageUrl}')`;\n        updateUserAvatar(imageUrl)\n            .then(() => {\n                console.log('Аватар успешно обновлен');\n            })\n            .catch((error) => {\n                console.error('Ошибка при добавлении аватара:', error);\n            })\n            .finally(() => {\n                evt.target.querySelector('button[type=\"submit\"]').textContent = 'Сохранить';\n                evt.target.reset();\n                closeModal(popupAvatar);\n            });\n    }\n}\n\nformAddprofileAvatar.addEventListener('submit', submitFormAvatar);\n\n//Валидация \nenableValidation(validationConfig);\n\n//Выводим инфо о пользователе и карточках на страницу\nPromise.all([getUserInfo(), getInitialCards()])\n  .then(([profileData, cardsData]) => {\n\n    const myId = profileData._id;\n\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`;\n    profileTitle.textContent = profileData.name;\n    profileDescription.textContent = profileData.about;\n\n    cardsData.forEach((cardData) => {\n      const cardElement = createCard(cardData, myId, clickImageHandler); \n      placesList.append(cardElement);\n    });\n  })\n  .catch((err) => {\n    console.error('Ошибка при загрузке данных:', err);\n  });\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n \n  \n\n\n\n\n"],"names":["config","baseUrl","headers","authorization","checkRes","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","dataCard","myId","clickImageHandler","cardElement","cloneNode","cardImage","cardTitle","cardDeleteButton","src","link","textContent","name","ownerId","owner","_id","cardId","addEventListener","fetch","method","then","deleteCard","remove","cardLikebutton","likes","Array","isArray","some","element","classList","add","contains","Error","updatedCard","length","removeLike","counterLike","updateUI","catch","error","console","addLike","counterElement","cardLikeButton","openModal","target","handleEscape","closePopupByCrossButton","overlayClick","closeModal","removeEventListener","event","key","evt","closest","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","validity","valid","clearValidation","inputs","from","querySelectorAll","forEach","input","setCustomValidity","profileEditButton","popupTypeEdit","profileAddbutton","popupTypeNewCard","nameInput","value","profileTitle","jobInput","profileDescription","formEditProfile","formAddCard","reset","profileImageType","popupAvatar","formAddprofileAvatar","forms","preventDefault","about","jobValue","nameValue","submitButton","body","JSON","stringify","finally","cardNameInput","urlInput","placesList","placeName","imageUrl","newCard","prepend","popupImg","modalImage","caption","imageAlt","alt","urlInputAvatar","profileImage","avatar","style","backgroundImage","log","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","profileData","cardsData","cardData","append","err"],"sourceRoot":""}