{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/index.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js"],"sourcesContent":["const config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\n    headers: {\n      authorization: 'b6ab756a-d068-4063-b5bd-15deff8a109f',\n      'Content-Type': 'application/json'\n    }\n  }\n\n//проверка ответа от сервера после выполнения запроса\nfunction checkRes(res) {\n  if (res.ok) {\n    return res.json();\n  }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n//Загрузка информации о пользователе с сервера\nfunction getUserInfo() {\n    return fetch(`${config.baseUrl}/users/me`, {\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\n// Загрузка карточек с сервера\nfunction getInitialCards() {\n    return fetch(`${config.baseUrl}/cards`, {\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\n//Редактирование профиля\nfunction editProfileInfo(name, about) {\n    return fetch(`${config.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: config.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => checkRes(res));\n}\n\n// Добавление новой карточки \nfunction addNewCard(name, link) {\n    return fetch(`${config.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: config.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => checkRes(res));\n}\n\nfunction deleteCard(cardId) {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: config.headers,\n    }).then((res) => checkRes(res));\n}\n\nfunction addLike(cardId) {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: config.headers,\n    })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      return res.json(); \n    })\n    .then((updatedCard) => {\n      return updatedCard.likes.length;\n    });\n  }\n\n  function removeLike(cardId) {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: config.headers,\n    })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      return res.json();\n    })\n    .then((updatedCard) => {\n      return updatedCard.likes.length;\n    });\n  }\n\n//Обновление аватара пользователя\nfunction updateUserAvatar(avatar) {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: config.headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then((res) => checkRes(res));\n}\n  \nexport {getUserInfo, getInitialCards, editProfileInfo, addNewCard, deleteCard, addLike, removeLike, updateUserAvatar};","import { deleteCard, addLike, removeLike } from \"./api.js\";\nimport { clickImageHandler } from \"./index.js\";\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\nfunction createCard(dataCard, myId) {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\n\n  cardImage.src = dataCard.link;\n  cardImage.alt = \"Изображение памятного места\" + dataCard.name;\n  cardTitle.textContent = dataCard.name;\n\n  const ownerId = dataCard.owner._id;\n  const cardId = dataCard._id;\n\n  if (myId === ownerId) {\n    cardDeleteButton.addEventListener('click', () => {\n          deleteCard(cardId)\n            .then((res) => {\n                cardElement.remove();\n            })\n            .catch((error) => {\n                console.error('Ошибка при удалении карточки:', error);\n            })\n    });\n  } else {\n    cardDeleteButton.remove();\n  }\n \n  //лайки карточек\n  const cardLikebutton = cardElement.querySelector('.card__like-button');\n  const hasMyLike = dataCard.likes && Array.isArray(dataCard.likes) && dataCard.likes.some(element => element._id === myId);\n  if (hasMyLike)\n    cardLikebutton.classList.add('card__like-button_is-active');\n\n  cardLikebutton.addEventListener('click', function() {\n    if (cardLikebutton.classList.contains('card__like-button_is-active')) {\n      removeLike(cardId)\n        .then((counterLike) => {\n          updateUI(counterLike); \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      addLike(cardId)\n        .then((counterLike) => {\n          updateUI(counterLike, myId); \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  });\n  \n  const counterElement = cardElement.querySelector('.counter__likes');\n\n  // Функция для обновления интерфейса на основе обновленной карточки\n  function updateUI(counterLike, myId) {\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\n\n    counterElement.textContent = counterLike;\n\n    if (myId && counterLike > 0) {\n        cardLikeButton.classList.add('card__like-button_is-active');\n    } else {\n        cardLikeButton.classList.remove('card__like-button_is-active');\n    }\n  \n}\n  \n  //кол-во лайков с сервера\n  counterElement.textContent = dataCard.likes && Array.isArray(dataCard.likes) ? dataCard.likes.length : 0;\n\n  cardImage.addEventListener('click', function () {\n    clickImageHandler(dataCard);\n  });\n\n  return cardElement;\n};\n\nexport {createCard};\n","import {createCard} from './card.js';\nimport {openModal, closeModal} from './modal.js';\nimport { clearValidation, enableValidation, validationConfig } from './validation.js';\nimport { getUserInfo, getInitialCards, editProfileInfo, addNewCard, updateUserAvatar } from './api.js';\n\n//Попапы\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\nconst profileAddbutton = document.querySelector('.profile__add-button');\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\n\nprofileEditButton.addEventListener('click', () => {\n    fillInEditProfileFormInputs();\n    clearValidation(formEditProfile, validationConfig);\n    openModal(popupTypeEdit);\n});\n\nprofileAddbutton.addEventListener('click', () => {\n    formAddCard.reset();\n    clearValidation(formAddCard, validationConfig);\n    openModal(popupTypeNewCard);\n});\n\nconst profileImageType = document.querySelector('.profile__image');\nconst popupAvatar = document.querySelector('.popup__content-profile-edit');\n\nprofileImageType.addEventListener('click', () => {\n    formAddprofileAvatar.reset();\n    clearValidation(formAddprofileAvatar, validationConfig);\n    openModal(popupAvatar);\n});\n\n//  Редактирование профиля\nconst nameInput = document.querySelector('.popup__input_type_name'); \nconst jobInput = document.querySelector('.popup__input_type_description');\nconst formEditProfile = document.forms['edit-profile'];\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\nfunction fillInEditProfileFormInputs() {\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n}\n\nfunction submitEditProfileForm(evt) {\n    evt.preventDefault(); \n    const jobValue = jobInput.value;\n    const nameValue = nameInput.value;\n\n    const submitButton = evt.submitter;\n    submitButton.textContent = 'Сохранение...';\n\n    editProfileInfo(nameValue, jobValue)\n        .then(() => {\n            profileTitle.textContent = nameValue;\n            profileDescription.textContent = jobValue;\n            closeModal(popupTypeEdit);\n        })\n        .catch(error => {\n            console.error('Ошибка при обновлении данных профиля:', error);\n        })\n        .finally(() => {\n            submitButton.textContent = 'Сохранить';\n        });\n}\n\nformEditProfile.addEventListener('submit', submitEditProfileForm);\n\n // Добавление карточки\nconst formAddCard = document.forms['new-place']; // получаем форму\nconst cardNameInput = formAddCard.querySelector('.popup__input_type_card-name');\nconst urlInput = formAddCard.querySelector('.popup__input_type_url');\nconst placesList = document.querySelector('.places__list');\n\nfunction submitFormCard(evt) {\n    evt.preventDefault();\n\n    const submitButton = evt.target.querySelector('button[type=\"submit\"]');\n    submitButton.textContent = 'Сохранение...';\n\n    const placeName = cardNameInput.value;\n    const imageUrl = urlInput.value;\n    \n    if (imageUrl) {\n        \n        addNewCard(placeName, imageUrl)\n            .then((res) => {\n                const dataCard = {\n                    name: placeName,\n                    link: imageUrl,\n                    owner: {\"_id\": res.owner._id},\n                    _id: res._id\n                };\n                const newCard = createCard(dataCard, res.owner._id, clickImageHandler);\n                placesList.prepend(newCard);\n                evt.target.reset(); \n                closeModal(popupTypeNewCard);\n            })\n            .catch(error => {\n                console.error('Ошибка при добавлении новой карточки:', error);\n            })\n            .finally(() => {\n                submitButton.textContent = 'Сохранить';\n            });\n    }\n}\n\nformAddCard.addEventListener('submit', submitFormCard);\n\n// Открытие попапа с картинкой\nconst popupImg = document.querySelector('.popup_type_image');\nconst modalImage = popupImg.querySelector('.popup__image');\nconst caption = popupImg.querySelector('.popup__caption');\n\nfunction clickImageHandler(dataCard) { \n    const imageUrl = dataCard.link; \n    const imageAlt = dataCard.name; \n    openModalImg(imageUrl, imageAlt); \n}\n\nfunction openModalImg(imageUrl, imageAlt) { \n    modalImage.src = imageUrl; \n    modalImage.alt = imageAlt; \n    caption.textContent = imageAlt;  \n    openModal(popupImg);\n}\n\n//Обновление аватара\nconst formAddprofileAvatar = document.forms['new-avatar'];\nconst urlInputAvatar = formAddprofileAvatar.querySelector('.popup__input_type_url_avatar');\nconst profileImage = document.querySelector('.profile__image');\n\nfunction submitFormAvatar(evt) {\n    evt.preventDefault();\n\n    const imageUrl = urlInputAvatar.value;\n    if (imageUrl) {\n        evt.target.querySelector('button[type=\"submit\"]').textContent = 'Сохранение...';\n\n        updateUserAvatar(imageUrl)\n            .then(() => {\n                console.log('Аватар успешно обновлен');\n                profileImage.style.backgroundImage = `url('${imageUrl}')`;\n                evt.target.querySelector('button[type=\"submit\"]').textContent = 'Сохранить';\n                evt.target.reset();\n                closeModal(popupAvatar);\n            })\n            .catch((error) => {\n                console.error('Ошибка при обновлении аватара:', error);\n                evt.target.querySelector('button[type=\"submit\"]').textContent = 'Сохранить';\n            });\n    }\n}\n\nformAddprofileAvatar.addEventListener('submit', submitFormAvatar);\n\n//Валидация \nenableValidation(validationConfig);\n\n//Выводим инфо о пользователе и карточках на страницу\nPromise.all([getUserInfo(), getInitialCards()])\n  .then(([profileData, cardsData]) => {\n\n    const myId = profileData._id;\n\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`;\n    profileTitle.textContent = profileData.name;\n    profileDescription.textContent = profileData.about;\n\n    cardsData.forEach((cardData) => {\n      const cardElement = createCard(cardData, myId, clickImageHandler); \n      placesList.append(cardElement);\n    });\n  })\n  .catch((err) => {\n    console.error('Ошибка при загрузке данных:', err);\n  });\n\n  export { clickImageHandler };\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n \n  \n\n\n\n\n","export {openModal, closeModal};\n\nfunction openModal(target) {\n    target.classList.add('popup_is-opened');\n    addEscapeListener();\n    document.addEventListener('click', closePopupByCrossButton);\n    document.addEventListener('click', overlayClick); \n}\n\nfunction closeModal(target) {\n    target.classList.remove('popup_is-opened');\n    removeEscapeListener();\n    document.removeEventListener('click', closePopupByCrossButton); // Удаляем обработчик клика на document\n    document.removeEventListener('click', overlayClick);\n}\n\nfunction addEscapeListener() {\n    document.addEventListener('keydown', handleEscape);\n}\n\nfunction removeEscapeListener() {\n    document.removeEventListener('keydown', handleEscape);\n}\n\nfunction handleEscape(event) {\n    if (event.key === 'Escape') {\n        const popup = document.querySelector('.popup_is-opened');\n        closeModal(popup);\n    }\n}\n\nfunction overlayClick(evt) {\n    const target = evt.target;\n    if (target.classList.contains('popup_is-opened')) {\n        closeModal(target);\n    }\n}\n\nfunction closePopupByCrossButton(evt) {\n    const target = evt.target;\n    if (target.classList.contains('popup__close')) {\n        closeModal(target.closest('.popup'));\n    }\n}","const validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n};\n\n//показывает элемент ошибки\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(validationConfig.errorClass);\n  };\n\n//скрывает элемент ошибки\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = '';\n  };\n\n //Проверяет formInput на корректность введённых данных и вызывает hideError и showError. \nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\n    if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n}; \n\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    }\n};\n\n  //Функция hasInvalidInput только проверяет наличие невалидного поля и сигнализирует, можно ли разблокировать кнопку сабмита.\nconst hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    })\n};\n\nconst setEventListeners = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', function () {\n        checkInputValidity(formElement, inputElement, validationConfig);\n        toggleButtonState(inputList, buttonElement, validationConfig);\n      });\n    });\n};\n\n//функция, которая найдёт и переберёт все формы на странице (включаем валидацию) \nconst enableValidation = (validationConfig) => {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach(formElement => {\n        setEventListeners(formElement, validationConfig);\n    })\n};\n\nfunction clearValidation(formElement, validationConfig) {\n    const inputs = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n    inputs.forEach(input => {\n        hideInputError(formElement, input, validationConfig);\n        input.setCustomValidity('');\n    });\n    toggleButtonState(inputs, buttonElement, validationConfig);\n}\n\nexport { clearValidation, enableValidation, validationConfig };\n\n\n"],"names":["config","baseUrl","headers","authorization","checkRes","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","dataCard","myId","cardElement","cloneNode","cardImage","cardTitle","cardDeleteButton","src","link","alt","name","textContent","ownerId","owner","_id","cardId","addEventListener","fetch","method","then","deleteCard","remove","catch","error","console","cardLikebutton","likes","Array","isArray","some","element","classList","add","contains","Error","updatedCard","length","removeLike","counterLike","updateUI","addLike","counterElement","cardLikeButton","imageUrl","imageAlt","modalImage","caption","openModal","popupImg","clickImageHandler","target","handleEscape","closePopupByCrossButton","overlayClick","closeModal","removeEventListener","event","key","evt","closest","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","validity","valid","clearValidation","inputs","from","querySelectorAll","forEach","input","setCustomValidity","profileEditButton","popupTypeEdit","profileAddbutton","popupTypeNewCard","nameInput","value","profileTitle","jobInput","profileDescription","formEditProfile","formAddCard","reset","profileImageType","popupAvatar","formAddprofileAvatar","forms","preventDefault","about","jobValue","nameValue","submitButton","submitter","body","JSON","stringify","finally","cardNameInput","urlInput","placesList","placeName","newCard","prepend","urlInputAvatar","profileImage","avatar","log","style","backgroundImage","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","profileData","cardsData","cardData","append","err"],"sourceRoot":""}